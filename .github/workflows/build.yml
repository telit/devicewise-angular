name: deviceWISE Angular CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: ðŸ“‘ Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: ðŸŸ© Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: ðŸŸ¢ Install node modules
        run: npm ci

      - name: ðŸ”¨ Build deviceWISE Angular
        run: npm run build:prod devicewise-angular

      - name: ðŸ§¹ Lint deviceWISE Angular
        continue-on-error: true
        run: npm run lint devicewise-angular

      # - name: ðŸ”¨ Build deviceWISE Angular Demo
      #   continue-on-error: true
      #   run: npm run build:prod

      # - name: ðŸ§¹ Lint deviceWISE Angular Demo
      #   continue-on-error: true
      #   run: npm run lint

      - name: âŒš Check if version has been updated
        id: check
        uses: EndBug/version-check@v1
        with:
          diff-search: true
          file-name: ./projects/devicewise-angular/package.json
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ðŸŸ¥ NPM setup
        if: steps.check.outputs.changed == 'true'
        working-directory: dist/devicewise-angular
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: ðŸ”´ NPM publish
        if: steps.check.outputs.changed == 'true'
        working-directory: dist/devicewise-angular
        run: npm publish

      - name: ðŸ˜º GitHub publish
        if: steps.check.outputs.changed == 'true'
        working-directory: dist/devicewise-angular
        run: |
          echo "@telit:registry=https://npm.pkg.github.com
          //npm.pkg.github.com/:_authToken=${{secrets.GITHUB_TOKEN}}" >> .npmrc
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: ðŸ’¾ Archive devicewise-angular artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/devicewise-angular

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: ðŸŸ© Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Download devicewise-angular artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist

      - name: ðŸ§ª Test
        run: |
          ls -al

      - name: ðŸ”´ NPM publish
        run: npm publish
